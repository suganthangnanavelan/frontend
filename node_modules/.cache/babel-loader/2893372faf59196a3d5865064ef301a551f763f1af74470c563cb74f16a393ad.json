{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'../App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CorpusManager=()=>{const[intents,setIntents]=useState([]);const[intent,setIntent]=useState('');const[utterances,setUtterances]=useState('');const[responses,setResponses]=useState('');const[editingId,setEditingId]=useState(null);useEffect(()=>{fetchIntents();},[]);const fetchIntents=async()=>{const result=await axios.get('http://localhost:5000/intents');setIntents(result.data);};const addOrUpdateIntent=async()=>{const newIntent={intent,utterances:utterances.split(',').map(item=>item.trim()),responses:responses.split(',').map(item=>item.trim())};if(editingId){await axios.put(\"http://localhost:5000/intents/\".concat(editingId),newIntent);}else{await axios.post('http://localhost:5000/intents',newIntent);}setIntent('');setUtterances('');setResponses('');setEditingId(null);fetchIntents();};const deleteIntent=async id=>{await axios.delete(\"http://localhost:5000/intents/\".concat(id));fetchIntents();};const startEditing=intent=>{setIntent(intent.intent);setUtterances(intent.utterances.join(', '));setResponses(intent.responses.join(', '));setEditingId(intent._id);window.scrollTo({top:0,behavior:'smooth'});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"heading\",children:\"Manage Intents\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:intent,placeholder:\"Intent Name\",onChange:e=>setIntent(e.target.value)}),/*#__PURE__*/_jsx(\"textarea\",{value:utterances,placeholder:\"Utterances (comma separated)\",onChange:e=>setUtterances(e.target.value)}),/*#__PURE__*/_jsx(\"textarea\",{value:responses,placeholder:\"Responses (comma separated)\",onChange:e=>setResponses(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:addOrUpdateIntent,children:editingId?'Update Intent':'Add Intent'})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Intents List\"}),/*#__PURE__*/_jsx(\"ul\",{children:intents.map(intent=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:intent.intent}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Utterances: \",intent.utterances.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Responses: \",intent.responses.join(', ')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"edit-btn\",onClick:()=>startEditing(intent),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-btn\",onClick:()=>deleteIntent(intent._id),children:\"Delete\"})]})]},intent._id))})]});};export default CorpusManager;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","CorpusManager","intents","setIntents","intent","setIntent","utterances","setUtterances","responses","setResponses","editingId","setEditingId","fetchIntents","result","get","data","addOrUpdateIntent","newIntent","split","map","item","trim","put","concat","post","deleteIntent","id","delete","startEditing","join","_id","window","scrollTo","top","behavior","children","className","type","value","placeholder","onChange","e","target","onClick"],"sources":["C:/Users/sugan/Downloads/Full_Setup/frontend/src/components/CorpusManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nconst CorpusManager = () => {\r\n  const [intents, setIntents] = useState([]);\r\n  const [intent, setIntent] = useState('');\r\n  const [utterances, setUtterances] = useState('');\r\n  const [responses, setResponses] = useState('');\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchIntents();\r\n  }, []);\r\n\r\n  const fetchIntents = async () => {\r\n    const result = await axios.get('http://localhost:5000/intents');\r\n    setIntents(result.data);\r\n  };\r\n\r\n  const addOrUpdateIntent = async () => {\r\n    const newIntent = {\r\n      intent,\r\n      utterances: utterances.split(',').map((item) => item.trim()),\r\n      responses: responses.split(',').map((item) => item.trim()),\r\n    };\r\n\r\n    if (editingId) {\r\n      await axios.put(`http://localhost:5000/intents/${editingId}`, newIntent);\r\n    } else {\r\n      await axios.post('http://localhost:5000/intents', newIntent);\r\n    }\r\n\r\n    setIntent('');\r\n    setUtterances('');\r\n    setResponses('');\r\n    setEditingId(null);\r\n    fetchIntents();\r\n  };\r\n\r\n  const deleteIntent = async (id) => {\r\n    await axios.delete(`http://localhost:5000/intents/${id}`);\r\n    fetchIntents();\r\n  };\r\n\r\n  const startEditing = (intent) => {\r\n    setIntent(intent.intent);\r\n    setUtterances(intent.utterances.join(', '));\r\n    setResponses(intent.responses.join(', '));\r\n    setEditingId(intent._id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"heading\">Manage Intents</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={intent}\r\n          placeholder=\"Intent Name\"\r\n          onChange={(e) => setIntent(e.target.value)}\r\n        />\r\n        <textarea\r\n          value={utterances}\r\n          placeholder=\"Utterances (comma separated)\"\r\n          onChange={(e) => setUtterances(e.target.value)}\r\n        />\r\n        <textarea\r\n          value={responses}\r\n          placeholder=\"Responses (comma separated)\"\r\n          onChange={(e) => setResponses(e.target.value)}\r\n        />\r\n        <button className=\"add-btn\" onClick={addOrUpdateIntent}>\r\n          {editingId ? 'Update Intent' : 'Add Intent'}\r\n        </button>\r\n      </div>\r\n      <h2>Intents List</h2>\r\n      <ul>\r\n        {intents.map((intent) => (\r\n          <li key={intent._id}>\r\n            <strong>{intent.intent}</strong>\r\n            <p>Utterances: {intent.utterances.join(', ')}</p>\r\n            <p>Responses: {intent.responses.join(', ')}</p>\r\n            <div className=\"action-buttons\">\r\n              <button className=\"edit-btn\" onClick={() => startEditing(intent)}>\r\n                Edit\r\n              </button>\r\n              <button className=\"delete-btn\" onClick={() => deleteIntent(intent._id)}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CorpusManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}