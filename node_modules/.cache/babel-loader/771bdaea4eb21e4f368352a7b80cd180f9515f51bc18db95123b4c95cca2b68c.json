{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sugan\\\\Downloads\\\\Full_Setup\\\\frontend\\\\src\\\\components\\\\CorpusManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CorpusManager = () => {\n  _s();\n  const [intents, setIntents] = useState([]);\n  const [intent, setIntent] = useState('');\n  const [utterances, setUtterances] = useState('');\n  const [responses, setResponses] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  useEffect(() => {\n    fetchIntents();\n  }, []);\n  const fetchIntents = async () => {\n    const result = await axios.get('http://localhost:5000/intents');\n    setIntents(result.data);\n  };\n  const addOrUpdateIntent = async () => {\n    const newIntent = {\n      intent,\n      utterances: utterances.split(',').map(item => item.trim()),\n      responses: responses.split(',').map(item => item.trim())\n    };\n    if (editingId) {\n      await axios.put(`http://localhost:5000/intents/${editingId}`, newIntent);\n    } else {\n      await axios.post('http://localhost:5000/intents', newIntent);\n    }\n    setIntent('');\n    setUtterances('');\n    setResponses('');\n    setEditingId(null);\n    fetchIntents();\n  };\n  const deleteIntent = async id => {\n    await axios.delete(`http://localhost:5000/intents/${id}`);\n    fetchIntents();\n  };\n  const startEditing = intent => {\n    setIntent(intent.intent);\n    setUtterances(intent.utterances.join(', '));\n    setResponses(intent.responses.join(', '));\n    setEditingId(intent._id);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Manage Intents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: intent,\n        placeholder: \"Intent Name\",\n        onChange: e => setIntent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: utterances,\n        placeholder: \"Utterances (comma separated)\",\n        onChange: e => setUtterances(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: responses,\n        placeholder: \"Responses (comma separated)\",\n        onChange: e => setResponses(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: addOrUpdateIntent,\n        children: editingId ? 'Update Intent' : 'Add Intent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Intents List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: intents.map(intent => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: intent.intent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Utterances: \", intent.utterances.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Responses: \", intent.responses.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-btn\",\n            onClick: () => startEditing(intent),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => deleteIntent(intent._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, intent._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CorpusManager, \"6p64gmkNB6J8sD9NFD23D8ITaRk=\");\n_c = CorpusManager;\nexport default CorpusManager;\nvar _c;\n$RefreshReg$(_c, \"CorpusManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CorpusManager","_s","intents","setIntents","intent","setIntent","utterances","setUtterances","responses","setResponses","editingId","setEditingId","fetchIntents","result","get","data","addOrUpdateIntent","newIntent","split","map","item","trim","put","post","deleteIntent","id","delete","startEditing","join","_id","window","scrollTo","top","behavior","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sugan/Downloads/Full_Setup/frontend/src/components/CorpusManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nconst CorpusManager = () => {\r\n  const [intents, setIntents] = useState([]);\r\n  const [intent, setIntent] = useState('');\r\n  const [utterances, setUtterances] = useState('');\r\n  const [responses, setResponses] = useState('');\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchIntents();\r\n  }, []);\r\n\r\n  const fetchIntents = async () => {\r\n    const result = await axios.get('http://localhost:5000/intents');\r\n    setIntents(result.data);\r\n  };\r\n\r\n  const addOrUpdateIntent = async () => {\r\n    const newIntent = {\r\n      intent,\r\n      utterances: utterances.split(',').map((item) => item.trim()),\r\n      responses: responses.split(',').map((item) => item.trim()),\r\n    };\r\n\r\n    if (editingId) {\r\n      await axios.put(`http://localhost:5000/intents/${editingId}`, newIntent);\r\n    } else {\r\n      await axios.post('http://localhost:5000/intents', newIntent);\r\n    }\r\n\r\n    setIntent('');\r\n    setUtterances('');\r\n    setResponses('');\r\n    setEditingId(null);\r\n    fetchIntents();\r\n  };\r\n\r\n  const deleteIntent = async (id) => {\r\n    await axios.delete(`http://localhost:5000/intents/${id}`);\r\n    fetchIntents();\r\n  };\r\n\r\n  const startEditing = (intent) => {\r\n    setIntent(intent.intent);\r\n    setUtterances(intent.utterances.join(', '));\r\n    setResponses(intent.responses.join(', '));\r\n    setEditingId(intent._id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"heading\">Manage Intents</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={intent}\r\n          placeholder=\"Intent Name\"\r\n          onChange={(e) => setIntent(e.target.value)}\r\n        />\r\n        <textarea\r\n          value={utterances}\r\n          placeholder=\"Utterances (comma separated)\"\r\n          onChange={(e) => setUtterances(e.target.value)}\r\n        />\r\n        <textarea\r\n          value={responses}\r\n          placeholder=\"Responses (comma separated)\"\r\n          onChange={(e) => setResponses(e.target.value)}\r\n        />\r\n        <button className=\"add-btn\" onClick={addOrUpdateIntent}>\r\n          {editingId ? 'Update Intent' : 'Add Intent'}\r\n        </button>\r\n      </div>\r\n      <h2>Intents List</h2>\r\n      <ul>\r\n        {intents.map((intent) => (\r\n          <li key={intent._id}>\r\n            <strong>{intent.intent}</strong>\r\n            <p>Utterances: {intent.utterances.join(', ')}</p>\r\n            <p>Responses: {intent.responses.join(', ')}</p>\r\n            <div className=\"action-buttons\">\r\n              <button className=\"edit-btn\" onClick={() => startEditing(intent)}>\r\n                Edit\r\n              </button>\r\n              <button className=\"delete-btn\" onClick={() => deleteIntent(intent._id)}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CorpusManager;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdgB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,+BAA+B,CAAC;IAC/DX,UAAU,CAACU,MAAM,CAACE,IAAI,CAAC;EACzB,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,SAAS,GAAG;MAChBb,MAAM;MACNE,UAAU,EAAEA,UAAU,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MAC5Db,SAAS,EAAEA,SAAS,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,IAAIX,SAAS,EAAE;MACb,MAAMb,KAAK,CAACyB,GAAG,CAAC,iCAAiCZ,SAAS,EAAE,EAAEO,SAAS,CAAC;IAC1E,CAAC,MAAM;MACL,MAAMpB,KAAK,CAAC0B,IAAI,CAAC,+BAA+B,EAAEN,SAAS,CAAC;IAC9D;IAEAZ,SAAS,CAAC,EAAE,CAAC;IACbE,aAAa,CAAC,EAAE,CAAC;IACjBE,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,IAAI,CAAC;IAClBC,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMY,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAM5B,KAAK,CAAC6B,MAAM,CAAC,iCAAiCD,EAAE,EAAE,CAAC;IACzDb,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMe,YAAY,GAAIvB,MAAM,IAAK;IAC/BC,SAAS,CAACD,MAAM,CAACA,MAAM,CAAC;IACxBG,aAAa,CAACH,MAAM,CAACE,UAAU,CAACsB,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3CnB,YAAY,CAACL,MAAM,CAACI,SAAS,CAACoB,IAAI,CAAC,IAAI,CAAC,CAAC;IACzCjB,YAAY,CAACP,MAAM,CAACyB,GAAG,CAAC;IACxBC,MAAM,CAACC,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACjD,CAAC;EAED,oBACElC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAIoC,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CxC,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QACEyC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErC,MAAO;QACdsC,WAAW,EAAC,aAAa;QACzBC,QAAQ,EAAGC,CAAC,IAAKvC,SAAS,CAACuC,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFxC,OAAA;QACE0C,KAAK,EAAEnC,UAAW;QAClBoC,WAAW,EAAC,8BAA8B;QAC1CC,QAAQ,EAAGC,CAAC,IAAKrC,aAAa,CAACqC,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFxC,OAAA;QACE0C,KAAK,EAAEjC,SAAU;QACjBkC,WAAW,EAAC,6BAA6B;QACzCC,QAAQ,EAAGC,CAAC,IAAKnC,YAAY,CAACmC,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFxC,OAAA;QAAQoC,SAAS,EAAC,SAAS;QAACW,OAAO,EAAE9B,iBAAkB;QAAAkB,QAAA,EACpDxB,SAAS,GAAG,eAAe,GAAG;MAAY;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNxC,OAAA;MAAAmC,QAAA,EAAI;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBxC,OAAA;MAAAmC,QAAA,EACGhC,OAAO,CAACiB,GAAG,CAAEf,MAAM,iBAClBL,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAS9B,MAAM,CAACA;QAAM;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAChCxC,OAAA;UAAAmC,QAAA,GAAG,cAAY,EAAC9B,MAAM,CAACE,UAAU,CAACsB,IAAI,CAAC,IAAI,CAAC;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDxC,OAAA;UAAAmC,QAAA,GAAG,aAAW,EAAC9B,MAAM,CAACI,SAAS,CAACoB,IAAI,CAAC,IAAI,CAAC;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CxC,OAAA;UAAKoC,SAAS,EAAC,gBAAgB;UAAAD,QAAA,gBAC7BnC,OAAA;YAAQoC,SAAS,EAAC,UAAU;YAACW,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAACvB,MAAM,CAAE;YAAA8B,QAAA,EAAC;UAElE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxC,OAAA;YAAQoC,SAAS,EAAC,YAAY;YAACW,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAACpB,MAAM,CAACyB,GAAG,CAAE;YAAAK,QAAA,EAAC;UAExE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAXCnC,MAAM,CAACyB,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtC,EAAA,CA7FID,aAAa;AAAA+C,EAAA,GAAb/C,aAAa;AA+FnB,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}